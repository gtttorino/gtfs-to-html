-
  function getTimetableSummary(timetable) {
    var summary = `This table shows schedules for a selection of key stops on the route for ${timetable.timetable_label} ${timetable.dayList}.`;
    if (timetable.orientation = 'vertical') {
      summary += ' Stops and their schedule times are listed in the columns.';
    } else if (timetable.orientation = 'horizontal') {
      summary += ' Schedule times are listed in rows, starting with the stop name in the first cell of the row.';
    } else if (timetable.orientation = 'hourly') {
      summary += ' Schedule times are listed in rows, starting with the stop name in the first cell of the row and the minutes after the hour in the second row.';
    }
    return summary;
  }

  function formatTripName(trip, idx, timetable) {
    let tripName = '';
    if (timetable.routes.length > 1) {
      tripName = trip.route_short_name;
    } else if (trip.trip_short_name) {
      tripName += trip.trip_short_name;
    } else {
      //tripName += `c.sa ${idx + 1}`;
      tripName += `${idx + 1}`;
    }

    let bacino = trip.route_id.charAt(trip.route_id.length-1);
    if (bacino !== 'U')
    {
      tripName += ` ${trip.dayList}`;
    }

    return tripName;
  }

  function formatRouteName(route) {
    let routeName = ''
    const hasShortName = route.route_short_name !== '' && route.route_short_name !== null;
    const hasLongName = route.route_long_name !== '' && route.route_long_name !== null;
    if (hasShortName) {
      routeName += route.route_short_name;
    }

    if (hasShortName && hasLongName) {
      routeName += ' - ';
    }

    if (hasLongName) {
      routeName += route.route_long_name;
    }

    return routeName;
  }

  function formatFrequencyWarning(frequencies) {
    var warning = 'Trip times shown below are an example only. ';
    frequencies.forEach((frequency, idx) => {
      if (idx === 0) {
        warning += 'This route runs every ';
      } else {
        warning += ' and ';
      }
      warning += `${frequency.headway_min} minutes between ${frequency.start_formatted_time} and ${frequency.end_formatted_time}`;
    });
    warning += '.';
    return warning;
  }
